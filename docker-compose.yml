version: '3.9'

services:
  db:
    image: postgres:15-alpine
    container_name: ofm_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ofm}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      # Initialize roles and schema on first run
      - ./docker/init/00-roles.sql:/docker-entrypoint-initdb.d/00-roles.sql:ro
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-ofm}"]
      interval: 5s
      timeout: 5s
      retries: 10

  postgrest:
    image: postgrest/postgrest:latest
    container_name: ofm_postgrest
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-ofm}
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_SERVER_PORT: 3000
      # Optional: enable detailed error messages during dev
      PGRST_LOG_LEVEL: info
    expose:
      - "3000"

  proxy:
    image: nginx:alpine
    container_name: ofm_proxy
    depends_on:
      - postgrest
    ports:
      - "8000:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  db_data:
    driver: local
